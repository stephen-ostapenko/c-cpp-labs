#pragma once

#include <cstdint>
#include <iosfwd>
#include <ios>

namespace bit_io {

using std::size_t;

class out_of_bits : public std::ios_base::failure {
public:
	out_of_bits(const char *msg): std::ios_base::failure(msg) {}
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class BitInputStream {
public:
	BitInputStream(std::istream &_in);
	~BitInputStream();

	bool read_bit();

private:
	static const size_t BITS_IN_CHAR = 8 * sizeof(char);
	std::istream *in;
	char buffer, bit_mask;
	unsigned char buf_pos;

	void update_buffer();
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class BitOutputStream {
public:
	BitOutputStream(std::ostream &_out);
	~BitOutputStream();

	void write_bit(bool bit);

private:
	static const size_t BITS_IN_CHAR = 8 * sizeof(char);
	std::ostream *out;
	char buffer, bit_mask;
	unsigned char buf_pos;

	void release_buffer();
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}